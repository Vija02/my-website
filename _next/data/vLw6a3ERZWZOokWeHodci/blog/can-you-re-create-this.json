{"pageProps":{"title":"Can you re-create this web component?","description":"Are you a confident front-end developer? Try to re-create this pagination component from GitHub. In this article, I talk about how seemingly simple task can take a long time without proper evaluation.","image":"/assets/blog/can-you-re-create-this/can-you-re-create-this-banner.jpg","createdAt":"Tue Jan 18 2022 00:00:00 GMT+0000 (Greenwich Mean Time)","source":{"compiledSource":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    em: \"em\",\n    h2: \"h2\",\n    h3: \"h3\",\n    hr: \"hr\",\n    img: \"img\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Here's the challenge:\"\n      }), \"\\nRe-create this pagination component from GitHub\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination.png\",\n        alt: \"github_pagination\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some problems looks hard but turns out to be easy. Then you look at one that seem easy but it turns out to be a hard problem. This is one of the latter.\\nIt's definitely not an ordeal, but it probably took me a good hour when I originally estimated to finish this within a few minutes.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now, before you say \", _jsx(_components.em, {\n        children: \"\\\"This is easy! You're just a bad programmer\\\"\"\n      }), \", \", _jsx(_components.strong, {\n        children: \"I encourage you to try to re-create it!\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Go to \", _jsx(_components.a, {\n        href: \"https://github.com/microsoft/vscode/issues\",\n        children: \"this page\"\n      }), \" and scroll to the very bottom for reference. Make sure you test various scenarios. Here's some:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Go to the first page\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Last page\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"In the middle of the page\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"At page 2-6\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"When there's not many pages (Eg: Total of 10 pages)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"On lower screen resolution (mobile)\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Need more time? Don't worry I'll wait.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \".\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Ok, let's explore the requirements. I hope this is detailed enough to make you wish you had these on \", _jsx(_components.em, {\n        children: \"$DAY_JOB\"\n      }), \"!\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: _jsx(_components.strong, {\n        children: \"Exploring the Requirements\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There's 2 crucial points for this component:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Able to navigate to first and last page\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Able to navigate to the adjacent pages easily\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"On its own, it's not a big deal. But once you account for responsive design, it's not as straightforward.\\nSo let's divide it per screen size.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"1. Mobile\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When we don't have enough space to put anything, GitHub simply shows 2 buttons.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_sm.png\",\n        alt: \"github_pagination_sm\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Simple, let's move on to the next size.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"2. Tablet\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's where it starts to get tricky.\\nWhen you're on the first page, show the first and the last page - along with the \\\"Previous\\\" and \\\"Next\\\" button.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_md_1.png\",\n        alt: \"github_pagination_md_1\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"But if we're on a different page then we'll want to indicate that.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_md_2.png\",\n        alt: \"github_pagination_md_2\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"What if we're somewhere on the middle? Notice the difference? GitHub doesn't show dots between 1 and 3 above. However, they show dots between 1 and 7.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_md_3.png\",\n        alt: \"github_pagination_md_3\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"3. Desktop\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Starting from the first page:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_lg_1.png\",\n        alt: \"github_pagination_lg_1\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Notice that the first five pages and the last two are shown.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's try page 5:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_lg_2.png\",\n        alt: \"github_pagination_lg_2\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Page 1 to 7 is now shown. That makes sense because the 2 pages around our current page seems to be shown.\\nCombining the fact that the first five pages are shown, this adds up.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_lg_3.png\",\n        alt: \"github_pagination_lg_3\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sure enough, we follow the same trend.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now, let's move to page 7.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_lg_4.png\",\n        alt: \"github_pagination_lg_4\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As expected, now we've lost page 3-4. Page 5-9 is shown because we're on page 7.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Some things not mentioned:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Previous and Next button becomes disabled when no page to paginate.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"It needs to handle any number of pages.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's 2 additional cases to refer to:\"\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Tablet size\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_ex_1.png\",\n        alt: \"github_pagination_ex_1\"\n      })\n    }), \"\\n\", _jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Desktop size\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/github_pagination_ex_2.png\",\n        alt: \"github_pagination_ex_2\"\n      })\n    }), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(\"br\", {}), \"\\n\", _jsx(_components.p, {\n      children: \"Didn't expect that many requirement did ya? Maybe you did â€” I for sure didn't.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"So why did this took me much longer than expected to make?\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"1. Unclear Scope\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"If you tried to re-create this component without looking at the requirements I laid out, you might be surprised at how many cases there are to handle.\\nUnclear scope is a big issue that leads to mismatch in development time and expectation. Most of you probably had an experience of being asked \", _jsx(\"i\", {\n        children: \"\\\"How long do you think this will take?\\\"\"\n      }), \".\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"And if you've experienced enough of those, you'll know to estimate a number and \", _jsx(_components.a, {\n        href: \"https://erikbern.com/2019/04/15/why-software-projects-take-longer-than-you-think-a-statistical-model.html\",\n        children: \"multiply that by at least 1.5\"\n      }), \". So for a feature that you think might take a week, you'll say one and a half week â€” Maybe even two!\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The more detailed a piece of work is, the better you'll be able to estimate. A vague task like \", _jsx(\"i\", {\n        children: \"\\\"Re-create X feature\\\"\"\n      }), \" is bound to go beyond your estimate no matter how simple it is.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"2. The amount of different cases to handle\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(\"i\", {\n        children: \"\\\"Less is better\\\"\"\n      }), \" â€” Somebody\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"When I started on this component, my mindset was to create the component with as little parts as possible. Many developers like to shorten and use \", _jsx(\"i\", {\n        children: \"\\\"smart\\\"\"\n      }), \" ways to code as they get better at programming.\\nThis can be syntactic sugar, clever tricks or little known facts of a certain language. If you know \", _jsx(_components.a, {\n        href: \"https://anssipiirainen.com/post/fp-tricks-for-simple-code/\",\n        children: \"Functional Programming\"\n      }), \", you know what I mean!\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"At some point in my career, I did similar. I had fun figuring out how to write something clever. But that often increases the complexity of your code.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Most importantly, \", _jsx(\"b\", {\n        children: _jsx(_components.code, {\n          children: \"less !== better\"\n        })\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Simple is better. And less often times does not equal to simple.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/assets/blog/can-you-re-create-this/if-and-loops.jpg\",\n        alt: \"If and loops\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Source: \", _jsx(_components.a, {\n        href: \"https://twitter.com/nice_byte/status/1466940940229046273\",\n        children: \"Twitter\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Some of you might be tempted to create a single elegant function to handle all the cases. In this example however, it might be much simpler and readable to handle each case on its own \", _jsx(\"i\", {\n        children: \"if\"\n      }), \" statement.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Although if you manage to solve this problem elegantly, let me know through \", _jsx(_components.a, {\n        href: \"mailto:hi@michaelsalim.co.uk\",\n        children: \"e-mail\"\n      }), \" or \", _jsx(_components.a, {\n        href: \"https://twitter.com/IamMichaelSalim\",\n        children: \"twitter\"\n      }), \"! I'd love to see it.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"End result\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I originally set out to do this for \", _jsx(_components.a, {\n        href: \"https://recalllab.com\",\n        children: \"Recall\"\n      }), \"'s task explorer page. Here's how it looks in the end. Not too bad!\"]\n    }), \"\\n\", _jsxs(\"video\", {\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      style: {\n        width: \"100%\",\n        maxWidth: 480,\n        display: \"flex\",\n        margin: \"auto\"\n      },\n      children: [_jsx(\"source\", {\n        src: \"/assets/blog/can-you-re-create-this/demo.mp4\",\n        type: \"video/mp4\"\n      }), _jsx(_components.p, {\n        children: \"Your browser does not support HTML video.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Final thought: This component might be a good test for a technical interview. What do you think?\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}